name: CI/CD Auto-Deploy @ The Tech Troll Tube Angular

on:
  # Trigger the workflow on push or pull request,
  # but only for the master branch
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-2019
    strategy:
      matrix:
        node-version: [14.x]
    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
      
    - name: Installation of Angular
      run: npm i @angular/cli
      # run: npm install -g @angular/cli

    - name: Policy
      run: Set-ExecutionPolicy RemoteSigned -Scope CurrentUser 

    # - name: NPM Install Angular
    #   run: npm install -g @angular/cli > /dev/null

    - name: NPM build Angular Production
      run: npm run-script build

#       run: npm run build
    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
#         publish_dir: ./website/build
        # publish_dir: ./dist/
        Branch: gh-pages
        folder: ./routing-app



############################################################################# NEW



# name: Angular GitHub CI
# on:
#   push:
#     branches:
#       - main

# jobs:
#   ci:
#     runs-on: ubuntu-latest

#     strategy:
#       matrix:
#         node-version: [14.x]

#     steps:
#       - uses: actions/checkout@v2

#       - name: Use Node.js ${{ matrix.node-version }}
#         uses: actions/setup-node@v1
#         with:
#           node-version: ${{ matrix.node-version }}

#       - name: Cache node modules
#         id: cache-nodemodules
#         uses: actions/cache@v2
#         env:
#           cache-name: cache-node-modules
#         with:
#           # caching node_modules
#           path: node_modules
#           key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
#           restore-keys: |
#             ${{ runner.os }}-build-${{ env.cache-name }}-
#             ${{ runner.os }}-build-
#             ${{ runner.os }}-

#       - name: Install Dependencies
#         if: steps.cache-nodemodules.outputs.cache-hit != 'true'
#         run: |
#           npm ci

#       - name: Build
#         run: |
#           npm run build -- --prod

#       # - name: Lint
#       #   run: |
#       #     npm run lint

#       # - name: Test
#       #   run: |
#       #     npm run test -- --prod

#       - name: Deploy
#         uses: peaceiris/actions-gh-pages@v3
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
# #          publish_dir: ./website/build
#           publish_dir: ./build/
          

# name: CI/CD Auto-Deploy @ The Tech Troll Tube Angular

# on:
#   push:
#     branches:
#       - 'main'

# jobs:
#   build:
#     name: Build and Test
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2
#       - name: Use Node 12.x
#         uses: actions/setup-node@v1
#         with:
#           node-version: '14.x'
#       - name: Install dependencies
#         run: npm ci
#       - name: Build
#         run: npm run build:ci
#       - name: Test
#         run: npm run test:ci
#       - name: Archive build
#         if: success()
#         uses: actions/upload-artifact@v1
#         with:
#           name: deploy_dist
#           path: dist
#       - name: Archive code coverage result
#         if: success()
#         uses: actions/upload-artifact@v1
#         with:
#           name: deploy_coverage
#           path: coverage
#   deploy:
#     runs-on: ubuntu-latest
#     needs: build
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v1
#       - name: Download build
#         uses: actions/download-artifact@v1
#         with:
#           name: deploy_dist
#       - name: Deploy to GitHub Pages
#         uses: JamesIves/github-pages-deploy-action@releases/v3
#         with:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           BRANCH: gh-pages
#           FOLDER: deploy_dist/angular-demo